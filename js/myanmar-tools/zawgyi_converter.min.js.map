{"version":3,"sources":["zawgyi_converter.js"],"names":["runPhase","rules","inString","outString","midString","startOfString","length","foundRule","_i","rules_1","rule","matchOnStart","m","match","p","rightPartSize","newStart","replace","s","revisit","substring","runAllPhases","allRules","allRules_1","Object","defineProperty","exports","value","ZawgyiConverter","prototype","zawgyiToUnicode","RegExp","unicodeToZawgyi","normalizeZawgyi"],"mappings":"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","file":"zawgyi_converter.min.js","sourcesContent":["\"use strict\";\n/* Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction runPhase(rules, inString) {\n    var outString = \"\";\n    var midString = inString;\n    var startOfString = true;\n    while (midString.length > 0) {\n        var foundRule = false;\n        for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n            var rule = rules_1[_i];\n            if (rule.matchOnStart == null || startOfString) {\n                var m = midString.match(rule.p);\n                // Matching uses only unnamed groups\n                if (m != null) {\n                    foundRule = true;\n                    var rightPartSize = midString.length - m[0].length;\n                    midString = midString.replace(rule.p, rule.s);\n                    var newStart = midString.length - rightPartSize;\n                    if (rule.revisit == null) {\n                        // New location is reset unless \"revisit\" is set to beginning of replacement.\n                        outString += midString.substring(0, newStart);\n                        midString = midString.substring(newStart);\n                    }\n                }\n            }\n        }\n        if (!foundRule) {\n            outString += midString[0];\n            midString = midString.substring(1);\n        }\n        startOfString = false;\n    }\n    return outString;\n    // End of phase\n}\nfunction runAllPhases(allRules, inString) {\n    var outString = inString;\n    for (var _i = 0, allRules_1 = allRules; _i < allRules_1.length; _i++) {\n        var rules = allRules_1[_i];\n        outString = runPhase(rules, outString);\n    }\n    return outString;\n}\n// TRANSLITERATION RULES\n// Input path: genconvert/input/my-t-my-s0-zawgyi.txt\nfunction getAllRulesZ2U() {\n    var rules0 = [\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u1064'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u1064'),\n            s: '\\u1004\\u103A\\u1039$1',\n        },\n        {\n            p: RegExp('^' + '\\u1064'),\n            s: '\\u1004\\u103A\\u1039',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u108B'),\n            s: '\\u1004\\u103A\\u1039$1\\u102D',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u108C'),\n            s: '\\u1004\\u103A\\u1039$1\\u102E',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u108D'),\n            s: '\\u1004\\u103A\\u1039$1\\u1036',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u1033\\u108B'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u102D\\u102F',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108B'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u102D',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108C'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u102E',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108D'),\n            s: '\\u1004\\u103A\\u1039$1\\u103B\\u1036',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103A\\u108E'),\n            s: '$1\\u103B\\u102D\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u108B'),\n            s: '\\u1004\\u103A\\u1039\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u108C'),\n            s: '\\u1004\\u103A\\u1039\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u108D'),\n            s: '\\u1004\\u103A\\u1039\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u106A'),\n            s: '\\u1025',\n        },\n        {\n            p: RegExp('^' + '\\u106B'),\n            s: '\\u100A',\n        },\n        {\n            p: RegExp('^' + '\\u108F'),\n            s: '\\u1014',\n        },\n        {\n            p: RegExp('^' + '\\u1090'),\n            s: '\\u101B',\n        },\n        {\n            p: RegExp('^' + '\\u1086'),\n            s: '\\u103F',\n        },\n        {\n            p: RegExp('^' + '[|\\u103A\\u107D]'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103C*\\u108A'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u103C'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '[|\\u103D\\u1087]'),\n            s: '\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1088'),\n            s: '\\u103E\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1089'),\n            s: '\\u103E\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1033'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1034'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1039'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '[\\u1094\\u1095]'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1061'),\n            s: '\\u1009\\u1039\\u1001',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1062'),\n            s: '\\u1009\\u1039\\u1002',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1065'),\n            s: '\\u1009\\u1039\\u1005',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1068'),\n            s: '\\u1009\\u1039\\u1007',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1076'),\n            s: '\\u1009\\u1039\\u1013',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1078'),\n            s: '\\u1009\\u1039\\u1015',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u107A'),\n            s: '\\u1009\\u1039\\u1017',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u1079'),\n            s: '\\u1009\\u1039\\u1016',\n        },\n        {\n            p: RegExp('^' + '\\u105A'),\n            s: '\\u102B\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u1060'),\n            s: '\\u1039\\u1000',\n        },\n        {\n            p: RegExp('^' + '\\u1061'),\n            s: '\\u1039\\u1001',\n        },\n        {\n            p: RegExp('^' + '\\u1062'),\n            s: '\\u1039\\u1002',\n        },\n        {\n            p: RegExp('^' + '\\u1063'),\n            s: '\\u1039\\u1003',\n        },\n        {\n            p: RegExp('^' + '\\u1065'),\n            s: '\\u1039\\u1005',\n        },\n        {\n            p: RegExp('^' + '[\\u1066\\u1067]'),\n            s: '\\u1039\\u1006',\n        },\n        {\n            p: RegExp('^' + '\\u1068'),\n            s: '\\u1039\\u1007',\n        },\n        {\n            p: RegExp('^' + '\\u1069'),\n            s: '\\u1039\\u1008',\n        },\n        {\n            p: RegExp('^' + '\\u106C'),\n            s: '\\u1039\\u100B',\n        },\n        {\n            p: RegExp('^' + '\\u106D'),\n            s: '\\u1039\\u100C',\n        },\n        {\n            p: RegExp('^' + '\\u1070'),\n            s: '\\u1039\\u100F',\n        },\n        {\n            p: RegExp('^' + '[\\u1071\\u1072]'),\n            s: '\\u1039\\u1010',\n        },\n        {\n            p: RegExp('^' + '\\u1096'),\n            s: '\\u1039\\u1010\\u103D',\n        },\n        {\n            p: RegExp('^' + '[\\u1073\\u1074]'),\n            s: '\\u1039\\u1011',\n        },\n        {\n            p: RegExp('^' + '\\u1075'),\n            s: '\\u1039\\u1012',\n        },\n        {\n            p: RegExp('^' + '\\u1076'),\n            s: '\\u1039\\u1013',\n        },\n        {\n            p: RegExp('^' + '\\u1077'),\n            s: '\\u1039\\u1014',\n        },\n        {\n            p: RegExp('^' + '\\u1078'),\n            s: '\\u1039\\u1015',\n        },\n        {\n            p: RegExp('^' + '\\u1079'),\n            s: '\\u1039\\u1016',\n        },\n        {\n            p: RegExp('^' + '\\u107A'),\n            s: '\\u1039\\u1017',\n        },\n        {\n            p: RegExp('^' + '[\\u107B\\u1093]'),\n            s: '\\u1039\\u1018',\n        },\n        {\n            p: RegExp('^' + '\\u107C'),\n            s: '\\u1039\\u1019',\n        },\n        {\n            p: RegExp('^' + '\\u1085'),\n            s: '\\u1039\\u101C',\n        },\n        {\n            p: RegExp('^' + '\\u108E'),\n            s: '\\u102D\\u1036',\n        },\n        {\n            p: RegExp('^' + '[\\u106E\\u1091]'),\n            s: '\\u100D\\u1039\\u100D',\n        },\n        {\n            p: RegExp('^' + '\\u106F'),\n            s: '\\u100D\\u1039\\u100E',\n        },\n        {\n            p: RegExp('^' + '\\u1092'),\n            s: '\\u100B\\u1039\\u100C',\n        },\n        {\n            p: RegExp('^' + '\\u1097'),\n            s: '\\u100B\\u1039\\u100B',\n        },\n        {\n            p: RegExp('^' + '\\u104E'),\n            s: '\\u104E\\u1004\\u103A\\u1038',\n        },\n    ];\n    var rules1 = [\n        {\n            p: RegExp('^' + '([    -‍⁠  　﻿])\\u1037'),\n            s: '\\u1037$1',\n        },\n        {\n            p: RegExp('^' + '([    -‍⁠  　﻿]+)([\\u102B-\\u1030\\u1032-\\u103B\\u103D\\u103E])'),\n            s: '$2',\n        },\n        {\n            p: RegExp('^' + '\\u1037+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1031+\\u1004\\u103A\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1004\\u103A\\u1039$1\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1031+\\u1037+([\\u1000-\\u1021])'),\n            s: '$1\\u1031\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1031+\\u103C([\\u1000-\\u1021])'),\n            s: '$1\\u103C\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1031+([\\u1000-\\u1021])([\\u103B-\\u103E]+)'),\n            s: '$1$2\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1031+([\\u1000-\\u102A])'),\n            s: '$1\\u1031',\n        },\n    ];\n    var rules2 = [\n        {\n            p: RegExp('^' + '\\u103B\\u103A'),\n            s: '\\u103A\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u1040([^\\u1040-\\u1049])'),\n            s: '\\u101D$1',\n            matchOnStart: 'true',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u103F])\\u1040([^\\u1040-\\u1049])'),\n            s: '$1\\u101D$2',\n        },\n        {\n            p: RegExp('^' + '\\u1044([^\\u1040-\\u1049])'),\n            s: '\\u104E$1',\n            matchOnStart: 'true',\n            revisit: 0,\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u103F])\\u1044([^\\u1040-\\u1049])'),\n            s: '$1\\u104E$2',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102E'),\n            s: '\\u1026',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u1037'),\n            s: '\\u1037\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u1036([\\u103B-\\u103E]*)([\\u102B-\\u1030\\u1032]+)'),\n            s: '$1$2\\u1036',\n        },\n        {\n            p: RegExp('^' + '([\\u102B\\u102C\\u102F\\u1030])([\\u102D\\u102E\\u1032])'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '\\u103C([\\u1000-\\u1021])'),\n            s: '$1\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u1005\\u103B'),\n            s: '\\u1008',\n        },\n    ];\n    var rules3 = [\n        {\n            p: RegExp('^' + '([\\u103B-\\u103E])\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1039$2$1',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u103A\\u1039([\\u1000-\\u1021])'),\n            s: '\\u103A\\u1039$1\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u1036([\\u103B-\\u103E]+)'),\n            s: '$1\\u1036',\n        },\n    ];\n    var rules4 = [\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E]+)\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E]+)\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '([\\u1031]+)([\\u102B-\\u1030\\u1032]*)\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1039$3$1$2',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u1030\\u1032]+)\\u1039([\\u1000-\\u1021])'),\n            s: '\\u1039$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103B-\\u103E]*)([\\u1031]+)([\\u103B-\\u103E]*)'),\n            s: '$1$3$2',\n        },\n        {\n            p: RegExp('^' + '\\u1037([\\u102D-\\u1030\\u1032\\u1036\\u103B-\\u103E]+)'),\n            s: '$1\\u1037',\n        },\n        {\n            p: RegExp('^' + '([\\u102B-\\u1030\\u1032]+)([\\u103B-\\u103E]+)'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u102B-\\u1032\\u1036\\u103B-\\u103E])\\u103A([\\u1000-\\u1021])'),\n            s: '$1\\u103A$2$3',\n        },\n    ];\n    var rules5 = [\n        {\n            p: RegExp('^' + '([\\u102B-\\u1032])([\\u103B-\\u103E])'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E])\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E])\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1038([\\u000136u\\u102B-\\u1030\\u1032\\u1037\\u103A-\\u103F])'),\n            s: '$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u102F'),\n            s: '\\u102F\\u1036',\n        },\n    ];\n    var rules6 = [\n        {\n            p: RegExp('^' + '\\u102D\\u102D+'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u102E+'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u102F+'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1030\\u1030+'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1032\\u1032+'),\n            s: '\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u1033\\u1033+'),\n            s: '\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u1035\\u1035+'),\n            s: '\\u1035',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u1036+'),\n            s: '\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u1037+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1039+'),\n            s: '\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u103A+'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103B\\u103B+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u103C+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u103D+'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103E+'),\n            s: '\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u102F[\\u1030\\u103A]'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u102E'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '[    -‍⁠  　﻿]+([\\u102B-\\u1032\\u1036-\\u103E])'),\n            s: '$1',\n        },\n    ];\n    return [rules0, rules1, rules2, rules3, rules4, rules5, rules6];\n}\n// END OF TRANSLITERATION RULES\n// TRANSLITERATION RULES\n// Input path: genconvert/input/my-t-my-d0-zawgyi.txt\nfunction getAllRulesU2Z() {\n    var rules0 = [\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B'),\n            s: '$1\\u103A\\u1064',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u102D\\u1036'),\n            s: '$1\\u108E',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u102D'),\n            s: '$1\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u102E'),\n            s: '$1\\u108C',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u1036'),\n            s: '$1\\u108D',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u1031'),\n            s: '$1\\u1031\\u1064',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102D\\u102F'),\n            s: '$1\\u103A\\u1033\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102D'),\n            s: '$1\\u103A\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102E\\u102F'),\n            s: '$1\\u103A\\u108C\\u1033',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u102E'),\n            s: '$1\\u103A\\u108C',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103B\\u1036'),\n            s: '$1\\u103A\\u108D',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])\\u103C'),\n            s: '$1\\u103B\\u1064',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039\\u102D'),\n            s: '\\u108B',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039\\u102E'),\n            s: '\\u108C',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039\\u1036'),\n            s: '\\u108D',\n        },\n        {\n            p: RegExp('^' + '[\\u1004\\u101B\\u105A]\\u103A\\u1039([\\u1000-\\u1021])'),\n            s: '$1\\u1064',\n        },\n        {\n            p: RegExp('^' + '\\u1025([\\u102B-\\u1030\\u1032])\\u1038'),\n            s: '\\u106A$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102F\\u1036'),\n            s: '\\u1025\\u1036\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u1036'),\n            s: '\\u108E',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u103E'),\n            s: '\\u108A',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u102F'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u1030'),\n            s: '\\u1089',\n        },\n        {\n            p: RegExp('^' + '\\u103A'),\n            s: '\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103B'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103C'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103D'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103E'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103F'),\n            s: '\\u1086',\n        },\n        {\n            p: RegExp('^' + '([\\u1019])\\u103E\\u1030'),\n            s: '$1\\u103D\\u1034',\n        },\n        {\n            p: RegExp('^' + '\\u102B\\u103A'),\n            s: '\\u105A',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1010\\u103D'),\n            s: '\\u1096',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1000'),\n            s: '\\u1060',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1001'),\n            s: '\\u1061',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1002'),\n            s: '\\u1062',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1003'),\n            s: '\\u1063',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1005'),\n            s: '\\u1065',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1006'),\n            s: '\\u1067',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1007'),\n            s: '\\u1068',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1008'),\n            s: '\\u1069',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100B'),\n            s: '\\u106C',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100C'),\n            s: '\\u106D',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100D'),\n            s: '\\u106E',\n        },\n        {\n            p: RegExp('^' + '\\u100D\\u1039\\u100E'),\n            s: '\\u106F',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100E'),\n            s: '\\u106F',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u100F'),\n            s: '\\u1070',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1010'),\n            s: '\\u1072',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1011'),\n            s: '\\u1074',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1012'),\n            s: '\\u1075',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1013'),\n            s: '\\u1076',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1014'),\n            s: '\\u1077',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1015'),\n            s: '\\u1078',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1016'),\n            s: '\\u1079',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1017'),\n            s: '\\u107A',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1018'),\n            s: '\\u1093',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1019'),\n            s: '\\u107C',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u101C'),\n            s: '\\u1085',\n        },\n        {\n            p: RegExp('^' + '\\u100F\\u1039\\u100D'),\n            s: '\\u1091',\n        },\n        {\n            p: RegExp('^' + '\\u100B\\u1039\\u100C'),\n            s: '\\u1092',\n        },\n        {\n            p: RegExp('^' + '\\u100B\\u1039\\u100B'),\n            s: '\\u1097',\n        },\n        {\n            p: RegExp('^' + '\\u104E\\u1004\\u103A\\u1038'),\n            s: '\\u104E',\n        },\n    ];\n    var rules1 = [\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103B\\u1031'),\n            s: '\\u1031\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103D\\u1031\\u1037'),\n            s: '\\u1031$1\\u1094\\u103D',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u1064\\u103B'),\n            s: '\\u103B$1\\u1064',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u103A\\u103C\\u103D])\\u1031'),\n            s: '\\u1031$1$2',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u102A])\\u1031'),\n            s: '\\u1031$1',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u1060-\\u1068\\u106C\\u106D\\u1070-\\u107C\\u1085\\u1093\\u1096])'),\n            s: '\\u108F$1',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])\\u1037'),\n            s: '\\u108F$1$2\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])\\u1037'),\n            s: '\\u108F$1$2\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])\\u1037'),\n            s: '\\u1014$1\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u1032\\u1037'),\n            s: '\\u1014\\u1032\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u1037'),\n            s: '\\u1014\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014\\u1032([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])\\u1037'),\n            s: '\\u108F$1\\u1032\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u108F$1$2',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])'),\n            s: '\\u108F$1$2',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])\\u1037'),\n            s: '\\u108F$1\\u1094',\n        },\n        {\n            p: RegExp('^' + '\\u1014([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u108F$1',\n        },\n        {\n            p: RegExp('^' + '([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064]*)\\u1037'),\n            s: '$1$2\\u1094',\n        },\n        {\n            p: RegExp('^' + '([^\\u1040-\\u1049])\\u1040([\\u102B-\\u103F])'),\n            s: '$1\\u101D$2',\n        },\n        {\n            p: RegExp('^' + '\\u1031\\u1040([^\\u1040-\\u1049])'),\n            s: '\\u1031\\u101D$1',\n        },\n        {\n            p: RegExp('^' + '\\u1025\\u102E'),\n            s: '\\u1026',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u103A'),\n            s: '\\u103A\\u1037',\n        },\n        {\n            p: RegExp('^' + '([\\u102B\\u102C\\u102F\\u1030])([\\u102D\\u102E\\u1032])'),\n            s: '$2$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1000-\\u1021])\\u102F'),\n            s: '$1$2\\u1033',\n        },\n    ];\n    var rules2 = [\n        {\n            p: RegExp('^' + '\\u103C\\u1094'),\n            s: '\\u103C\\u1095',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])\\u102D\\u103D\\u102F'),\n            s: '\\u107F$1\\u102D\\u1087\\u1083',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u102D\\u103D\\u102F'),\n            s: '\\u1080$1\\u102D\\u1087\\u1083',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])'),\n            s: '\\u1083$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])'),\n            s: '\\u1084$1$2$3',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])'),\n            s: '\\u107F$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])'),\n            s: '\\u1080$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])\\u1030'),\n            s: '\\u103B$1\\u1034',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])\\u1030'),\n            s: '\\u107E$1\\u1034',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])(\\u102F)'),\n            s: '\\u103B$1\\u1033',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])(\\u102F)'),\n            s: '\\u107E$1\\u1033',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u1081$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u1082$1$2',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u100A\\u106B])'),\n            s: '\\u1082$1',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1009\\u106A])'),\n            s: '\\u103B\\u106A',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1001\\u1002\\u1004\\u1005\\u1007\\u100B-\\u100E\\u1012\\u1013\\u1015-\\u1017\\u1019\\u101D\\u1020\\u1025\\u1026])'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]([\\u1000\\u1003\\u1006\\u1009\\u100A\\u100F-\\u1011\\u1018\\u101C\\u101E\\u101F\\u1021])'),\n            s: '\\u107E$1',\n        },\n        {\n            p: RegExp('^' + '\\u1009([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u106A$1',\n        },\n        {\n            p: RegExp('^' + '\\u100A([\\u102F\\u1030\\u1037\\u103A\\u103C\\u103D\\u1087-\\u108A])'),\n            s: '\\u106B$1',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102D'),\n            s: '\\u102D\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103A([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])\\u102F[\\u1037\\u1094\\u1095]'),\n            s: '\\u103A$1\\u1033\\u1095',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u102F[\\u1037\\u1094\\u1095]'),\n            s: '\\u103A\\u1033\\u1095',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u102F'),\n            s: '\\u103A\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u1064\\u102E'),\n            s: '\\u108C',\n        },\n    ];\n    var rules3 = [\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E]+)\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E]+)\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1037([\\u102D-\\u1030\\u1032\\u1036])'),\n            s: '$1\\u1037',\n        },\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])([\\u102B-\\u1032\\u1036\\u103B-\\u103E])\\u103A([\\u1000-\\u1021])'),\n            s: '$1\\u103A$2$3',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102F'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u1033\\u1094'),\n            s: '\\u1033\\u1095',\n        },\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1000-\\u1021])([\\u102D\\u102E\\u1032\\u1036\\u1039\\u103D\\u103E\\u1064])\\u102F'),\n            s: '$1$2$3\\u1033',\n        },\n    ];\n    var rules4 = [\n        {\n            p: RegExp('^' + '([\\u103D\\u103E])\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u1038([\\u102B-\\u1030\\u1032\\u103C-\\u103F])'),\n            s: '$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1038([\\u1036\\u1037\\u103A])'),\n            s: '$1\\u1038',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u102F'),\n            s: '\\u102F\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u103A([\\u1064\\u108B-\\u108E])\\u102D\\u102F'),\n            s: '\\u103A$1\\u102D\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u102D\\u102F'),\n            s: '\\u103A\\u102D\\u1033',\n        },\n    ];\n    var rules5 = [\n        {\n            p: RegExp('^' + '([\\u1000-\\u1021])\\u103B\\u103A'),\n            s: '$1\\u103A\\u103B',\n        },\n        {\n            p: RegExp('^' + '([\\u103C-\\u103E])\\u103B'),\n            s: '\\u103B$1',\n        },\n        {\n            p: RegExp('^' + '([\\u103D\\u103E])\\u103C'),\n            s: '\\u103C$1',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103D'),\n            s: '\\u103D\\u103E',\n        },\n        {\n            p: RegExp('^' + '([\\u102D-\\u1030\\u1032])\\u103A([\\u1000-\\u1021])\\u103A'),\n            s: '$1$2\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u103A'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u103A'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u103A'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u102E'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u1030'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102B\\u102B+'),\n            s: '\\u102B',\n        },\n        {\n            p: RegExp('^' + '\\u102C\\u102C+'),\n            s: '\\u102C',\n        },\n        {\n            p: RegExp('^' + '\\u102D\\u102D+'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E\\u102E+'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u102F+'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1030\\u1030+'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1031\\u1031+'),\n            s: '\\u1031',\n        },\n        {\n            p: RegExp('^' + '\\u1032\\u1032+'),\n            s: '\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u1036\\u1036+'),\n            s: '\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u103A\\u103A+'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103B\\u103B+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u103C+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u103D+'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103E\\u103E+'),\n            s: '\\u103E',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u102D'),\n            s: '\\u102D\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u1036'),\n            s: '\\u1036\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1039\\u1037'),\n            s: '\\u1037\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u1032'),\n            s: '\\u1032\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103C\\u102E'),\n            s: '\\u102E\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u1088'),\n            s: '\\u1088',\n        },\n    ];\n    return [rules0, rules1, rules2, rules3, rules4, rules5];\n}\n// END OF TRANSLITERATION RULES\n// TRANSLITERATION RULES\n// Input path: genconvert/input/my_normalize_zawgyi_transliteration_rules.txt\nfunction getAllRulesZNorm() {\n    var rules0 = [\n        {\n            p: RegExp('^' + '\\u1025\\u102E'),\n            s: '\\u1026',\n        },\n        {\n            p: RegExp('^' + '\\u102F([\\u102D\\u1036])'),\n            s: '$1\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1039([\\u1037\\u1094\\u1095])'),\n            s: '$1\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103C([\\u102E\\u1032])'),\n            s: '$1\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u1033\\u102D'),\n            s: '\\u102D\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102D'),\n            s: '\\u102D\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u1089'),\n            s: '\\u103D\\u1034',\n        },\n        {\n            p: RegExp('^' + '\\u1064\\u103A'),\n            s: '\\u103A\\u1064',\n        },\n        {\n            p: RegExp('^' + '\\u1067'),\n            s: '\\u1066',\n        },\n        {\n            p: RegExp('^' + '\\u1072'),\n            s: '\\u1071',\n        },\n        {\n            p: RegExp('^' + '\\u1074'),\n            s: '\\u1073',\n        },\n        {\n            p: RegExp('^' + '\\u1093'),\n            s: '\\u107B',\n        },\n    ];\n    var rules1 = [\n        {\n            p: RegExp('^' + '\\u102D+'),\n            s: '\\u102D',\n        },\n        {\n            p: RegExp('^' + '\\u102E+'),\n            s: '\\u102E',\n        },\n        {\n            p: RegExp('^' + '\\u102F+'),\n            s: '\\u102F',\n        },\n        {\n            p: RegExp('^' + '\\u1030+'),\n            s: '\\u1030',\n        },\n        {\n            p: RegExp('^' + '\\u1032+'),\n            s: '\\u1032',\n        },\n        {\n            p: RegExp('^' + '\\u1033+'),\n            s: '\\u1033',\n        },\n        {\n            p: RegExp('^' + '\\u1034+'),\n            s: '\\u1034',\n        },\n        {\n            p: RegExp('^' + '\\u1036+'),\n            s: '\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u1037+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1039+'),\n            s: '\\u1039',\n        },\n        {\n            p: RegExp('^' + '\\u103A+'),\n            s: '\\u103A',\n        },\n        {\n            p: RegExp('^' + '\\u103B+'),\n            s: '\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103C+'),\n            s: '\\u103C',\n        },\n        {\n            p: RegExp('^' + '\\u103D+'),\n            s: '\\u103D',\n        },\n        {\n            p: RegExp('^' + '\\u103E+'),\n            s: '\\u103D',\n        },\n    ];\n    var rules2 = [\n        {\n            p: RegExp('^' + '[\\u1037\\u1094\\u1095]+'),\n            s: '\\u1037',\n        },\n        {\n            p: RegExp('^' + '\\u1005\\u103A'),\n            s: '\\u1008',\n        },\n        {\n            p: RegExp('^' + '\\u101D'),\n            s: '\\u1040',\n        },\n        {\n            p: RegExp('^' + '\\u102F\\u1088'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103B\\u103A'),\n            s: '\\u103A\\u103B',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u102F'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103D\\u1088'),\n            s: '\\u1088',\n        },\n        {\n            p: RegExp('^' + '\\u103B([\\u1000-\\u1021])\\u103B$'),\n            s: '\\u103B$1',\n        },\n    ];\n    var rules3 = [\n        {\n            p: RegExp('^' + '[\\u103B\\u107E-\\u1084]+'),\n            s: '\\u103B',\n        },\n    ];\n    var rules4 = [\n        {\n            p: RegExp('^' + '([\\u103B\\u107E-\\u1084])([\\u1000-\\u1021])\\u1036\\u102F'),\n            s: '$1$2\\u1033\\u1036',\n        },\n    ];\n    var rules5 = [\n        {\n            p: RegExp('^' + '\\u1033'),\n            s: '\\u102F',\n        },\n    ];\n    var rules6 = [\n        {\n            p: RegExp('^' + '\\u1036\\u102F'),\n            s: '\\u102F\\u1036',\n        },\n        {\n            p: RegExp('^' + '\\u1037\\u1039\\u1037'),\n            s: '\\u1037\\u1039',\n        },\n        {\n            p: RegExp('^' + '[|\\u106A\\u106B]'),\n            s: '\\u100A',\n        },\n    ];\n    var rules7 = [\n        {\n            p: RegExp('^' + '[    -‍⁠  　﻿]+([\\u1000-\\u109F])'),\n            s: '$1',\n            revisit: 0,\n        },\n    ];\n    return [rules0, rules1, rules2, rules3, rules4, rules5, rules6, rules7];\n}\n// END OF TRANSLITERATION RULES\nvar ZawgyiConverter = /** @class */ (function () {\n    function ZawgyiConverter() {\n    }\n    ZawgyiConverter.prototype.zawgyiToUnicode = function (inString) {\n        return runAllPhases(getAllRulesZ2U(), inString);\n    };\n    ZawgyiConverter.prototype.unicodeToZawgyi = function (inString) {\n        return runAllPhases(getAllRulesU2Z(), inString);\n    };\n    ZawgyiConverter.prototype.normalizeZawgyi = function (inString) {\n        return runAllPhases(getAllRulesZNorm(), inString);\n    };\n    return ZawgyiConverter;\n}());\nexports.ZawgyiConverter = ZawgyiConverter;\n"]}